@model HBShop.Models.OrderMaster

@{
    ViewBag.Title = "Create";
}


<div>
    <h4>OrderMaster</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.TotalAmount)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TotalAmount)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Received)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Received)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UpdateDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UpdateDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>

        @*<dd>
                @Html.DisplayFor(model => model.IsDeleted)
            </dd>*@

    </dl>
</div>

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    
    @Html.AntiForgeryToken()
    @Html.Hidden("OrderMasterId", Model.OrderMasterId)
    @*<input type="hidden" id="OrderMasterId" name="OrderMasterId" value="2">*@

    <div class="form-horizontal">
        <h4>OrderDetail</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Details[0].ItemId, "ItemId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemId", String.Empty)
                @Html.ValidationMessageFor(model => model.Details[0].ItemId)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.OrderMasterId, "OrderMasterId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrderMasterId", String.Empty)
                @Html.ValidationMessageFor(model => model.OrderMasterId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Details[0].UnitPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("UnitPrice")
                
                @Html.ValidationMessageFor(model => model.Details[0].UnitPrice)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UnitId, "UnitId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UnitId", String.Empty)
                @Html.ValidationMessageFor(model => model.UnitId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Details[0].Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Quantity")
               
                @Html.ValidationMessageFor(model => model.Details[0].Quantity)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (Model.Details.Count>0)
{ 

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Item.ItemName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Unit.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].UnitPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Details[0].Total)
        </th>
      
       
    </tr>

    @foreach (var item in Model.Details)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Item.ItemName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Unit.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdateDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.OrderDetailId }) |
                @Html.ActionLink("Details", "Details", new { id = item.OrderDetailId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.OrderDetailId })
            </td>
        </tr>
    }

</table>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
